version: "3.4"

services:
  db:
    image: postgres:latest
    volumes:
      - edu_learn-dev-data:/var/lib/postgresql/data

    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DEV_DATABASE}
      POSTGRES_USER: ${DEV_USERNAME}
      POSTGRES_PASSWORD: ${DEV_PASSWORD}

  web:
    image: edu_learn_be:development
    build:
      context: .
      target: development
    # image: edu_learn_be:development
    command: sh -c "python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    # command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 project.wsgi:application"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DOCKER_ENV=true

volumes:
  edu_learn-dev-data:
# version: "3.4"

# services:
#   db:
#     image: postgres:latest
#     volumes:
#       - edu_learn-dev-data:/var/lib/postgresql/data
#     env_file:
#       - .env
#     environment:
#       POSTGRES_DB: ${DEV_DATABASE}
#       POSTGRES_USER: ${DEV_USERNAME}
#       POSTGRES_PASSWORD: ${DEV_PASSWORD}

#   web:
#     image: edu_learn_be:development
#     command: sh -c "python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
#     # command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 project.wsgi:application"
#     volumes:
#       - .:/code
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       - DOCKER_ENV=true

# volumes:
#   edu_learn-dev-data:

